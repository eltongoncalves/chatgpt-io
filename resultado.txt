import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;
import java.util.HashMap;
import java.util.Map;

public class ExtracaoDados {
    
    // Definição do layout dos campos com posição inicial e comprimento para cada campo
    private static final Map<String, Campo> layoutCampos = new HashMap<>();

    static {
        // Exemplo de layout baseado em posições fictícias - substitua com posições reais do arquivo Excel
        layoutCampos.put("codigoRegistro", new Campo(0, 3));
        layoutCampos.put("codigoEmissor", new Campo(3, 7));
        layoutCampos.put("dataTransacao", new Campo(10, 8));
        layoutCampos.put("valorTransacao", new Campo(18, 10));
        // Adicione todos os campos necessários conforme o layout
    }

    public static void main(String[] args) {
        String caminhoArquivo = "/caminho/para/pesquisa.txt"; // Altere para o caminho real do arquivo

        try (BufferedReader reader = new BufferedReader(new FileReader(caminhoArquivo))) {
            String linha;
            while ((linha = reader.readLine()) != null) {
                Map<String, String> dadosExtraidos = extrairDados(linha);
                exibirDados(dadosExtraidos);
            }
        } catch (IOException e) {
            e.printStackTrace();
        }
    }

    // Método para extrair dados conforme o layout definido
    private static Map<String, String> extrairDados(String linha) {
        Map<String, String> dados = new HashMap<>();
        for (Map.Entry<String, Campo> entry : layoutCampos.entrySet()) {
            String nomeCampo = entry.getKey();
            Campo campo = entry.getValue();
            String valor = linha.substring(campo.posicaoInicial, campo.posicaoInicial + campo.comprimento).trim();
            dados.put(nomeCampo, valor);
        }
        return dados;
    }

    // Método para exibir os dados extraídos
    private static void exibirDados(Map<String, String> dados) {
        System.out.println("Dados Extraídos:");
        for (Map.Entry<String, String> entry : dados.entrySet()) {
            System.out.println(entry.getKey() + ": " + entry.getValue());
        }
        System.out.println("-------------------------------");
    }

    // Classe auxiliar para definir o layout de cada campo
    private static class Campo {
        int posicaoInicial;
        int comprimento;

        public Campo(int posicaoInicial, int comprimento) {
            this.posicaoInicial = posicaoInicial;
            this.comprimento = comprimento;
        }
    }
}
